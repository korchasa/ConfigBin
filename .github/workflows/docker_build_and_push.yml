name: CI/CD

env:
  GO_VERSION: 1.20.x
  GOLANGCI_LINT_VERSION: v1.53
  DOCKER_REPO: ghcr.io/korchasa/config-bin
  DOCKER_VERSION: latest

on:
  schedule:
    - cron: "0 10 * * *"
  push:
    branches:
      - main
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      -
        name: Check out code
        uses: actions/checkout@v3
      -
        name: Run tests
        run: go test -v ./...

  lint:
    runs-on: ubuntu-latest
    steps:
      -
        name: Check out code
        uses: actions/checkout@v3
      -
        name: Set up GolangCI-Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}

  docker:
    needs: [ test, lint ]
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKER_REPO }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
